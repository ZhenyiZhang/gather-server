import { Injectable } from '@nestjs/common';
import clientURL from '../../../clientURL/clientURL'
import { OrganizationService } from '../../organization/organization.service';
import { JwtService } from '@nestjs/jwt';
import * as nodemailer from 'nodemailer';
require('dotenv').config({path: '/Users/zhenyizhang/Documents/Project.nosync/gather-server/process.env'});
const Mail = process.env.MAIL_NAME;
const MailPass = process.env.MAIL_PASS;

@Injectable()
export class ResetPasswordService {
    constructor (
        private organizationService: OrganizationService,
        private jwtService: JwtService
    ) {}

    async sendMail(email: string) {
        const payload = await this.organizationService.getResetPasswordInfo(email);
        if(!payload) return Promise.reject('the email is not registered');
        const ResetToken = await this.jwtService.sign(payload);
        const transport = nodemailer.createTransport({
            service: "gmail",
            auth: {
                user: Mail, //generated by Mailtrap
                pass: MailPass //generated by Mailtrap
            }
        });
        const mailOptions = {
            from: Mail,
            to: email,
            subject: 'Reset password link',
            text: clientURL + '/reset/' + ResetToken,
        };
        return transport.sendMail(mailOptions);
    }

    async resetPassword(password: string, email: string) {
        return this.organizationService.resetPassword(password, email);
    }
}


